{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/docdetails/docdetails.component.css","webpack:///./src/app/components/docdetails/docdetails.component.html","webpack:///./src/app/components/docdetails/docdetails.component.ts","webpack:///./src/app/components/doclist/doclist.component.css","webpack:///./src/app/components/doclist/doclist.component.html","webpack:///./src/app/components/doclist/doclist.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/services/doclist.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { DoclistComponent } from './components/doclist/doclist.component';\nimport { DocdetailsComponent } from './components/docdetails/docdetails.component';\nimport {DoclistService} from './services/doclist.service';\nimport {RouterModule,Routes} from '@angular/router';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport {FormsModule} from '@angular/forms';\n\n\nconst appRoutes : Routes= [\n\n  {path:'',component:DoclistComponent},\n  {path:'details/:id',component:DocdetailsComponent}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DoclistComponent,\n    DocdetailsComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [DoclistService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<a routerLink=\\\"/\\\"><button class=\\\"btn btn-light btn-sm mb-3\\\">BACK</button></a>\\n<h1 class=\\\"text-center  uppercase\\\">Welcome to Doctors Details Page</h1>\\n<div *ngIf=\\\"detail\\\" class=\\\"card\\\">\\n<div class=\\\"card-body text-center mb-10\\\">\\n  <h3>{{detail.name}}</h3>\\n  <p>SPECIALITY :  {{detail.speciality}} </p>\\n  <p>AREA : {{detail.area}} </p>\\n  <p>PHONE NUMBER :{{detail.area}}</p>\\n  <p>REVIEW SCORE: {{detail.score}}</p>\\n</div>\\n</div>\\n\\n\\n<div class=\\\"card mt-3\\\">\\n    <h3>OTHERS DOCTORS OF SAME SPECIALITY(ORDER BY REVIEW SCORE)</h3>\\n  <div *ngIf=\\\"sameDetails\\\" class=\\\"card-body\\\" >\\n  \\n  <ul ></ul>\\n  <li *ngFor=\\\"let det of sameDetails\\\" >NAME:   {{det.name}} <span class=\\\"ml-4\\\">SCORE:   {{det.score}}</span></li>\\n</div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {DoclistService} from '../../services/doclist.service';\nimport {Doctor} from '../../models/doctors';\n\n@Component({\n  selector: 'app-docdetails',\n  templateUrl: './docdetails.component.html',\n  styleUrls: ['./docdetails.component.css']\n})\nexport class DocdetailsComponent implements OnInit {\n  detail:Doctor;\n  sameDetails:Doctor[];\n  category:String;\n  constructor(private route:ActivatedRoute,\n  private docListService:DoclistService) { \n    \n  }\n  ngOnInit() {\n    const id = +this.route.snapshot.paramMap.get('id');\n    \n    this.docListService.getDoctor(id).subscribe(doc =>{\n      this.detail = doc;\n      this.docListService.getSameDetails(this.detail.speciality).subscribe(docs=>{\n        this.sameDetails = docs;\n        this.filterResults();\n      })\n\n    });\n\n    \n  }\n\n  filterResults(){\n\n    this.sameDetails = this.sameDetails.filter(item=>{\n     return  item.id != this.detail.id;\n      \n    });\n   this.sameDetails.sort(function(a,b){\n     if(a.score>b.score)\n        return -1;\n    else if(a.score<b.score)\n      return 1;\n    else\n      return 0;\n    })\n    console.log(this.sameDetails);\n  }\n\n  \n\n  \n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"text-center\\\"> Find Your Doctor</h1>\\n<div class=\\\"card card-body mb-3\\\">\\n  <form (ngSubmit)=\\\"searchLists()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>SPECIALITY : </label>\\n      <select class=\\\"form-control mb-2\\\" id=\\\"s\\\" [(ngModel)]=\\\"s\\\" name=\\\"s\\\" >\\n          <option *ngFor=\\\"let spec of specs\\\"  [value]=\\\"spec\\\">{{spec}}</option>\\n        </select>\\n      <label class=\\\"mt-2\\\">AREA : </label>\\n      <select class=\\\"form-control mb-2\\\" id=\\\"a\\\" [(ngModel)]=\\\"a\\\" name=\\\"a\\\">\\n          <option *ngFor=\\\"let area of areas\\\"  [value]=\\\"area\\\">{{area}}</option>\\n        </select>\\n      <label class=\\\"mt-2\\\">REVIEW SCORE: </label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"score\\\" placeholder=\\\"SEARCH FOR REVIEW SCORE GREATER THAN(MAX-5)\\\" \\n      class=\\\"form-control\\\"  name=\\\"score\\\">\\n      <input type=\\\"submit\\\" class=\\\"btn btn-default mt-2\\\" value=\\\"SEARCH\\\">\\n</div>\\n  </form>\\n</div>\\n\\n<div *ngIf=\\\"doctors\\\">\\n<div *ngIf=\\\"doctors.length>0\\\">\\n<table class=\\\"table table-bordered\\\">\\n  <th>ID</th>\\n  <th>NAME</th>\\n  <th>SPECIALITY</th>\\n  <th>AREA</th>\\n  <th>PHONE NUMBER</th>\\n  <th>REVIEW SCORE</th>\\n  <tr *ngFor=\\\"let doc of doctors\\\">\\n    <td>{{doc.id}}</td>\\n    <td><a routerLink=\\\"/details/{{doc.id}}\\\">{{doc.name}}</a></td>\\n    <td>{{doc.speciality}}</td>\\n    <td>{{doc.area}}</td>\\n    <td>{{doc.phoneNo}}\\n    <td>{{doc.score}}</td>\\n  </tr>\\n</table>\\n</div>\\n<div *ngIf=\\\"doctors.length<=0\\\">\\n<h4>SORRY! NO DOCTORS FOR THIS SEARCH.</h4>\\n\\n</div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {DoclistService} from '../../services/doclist.service';\nimport {Doctor} from '../../models/doctors';\n@Component({\n  selector: 'app-doclist',\n  templateUrl: './doclist.component.html',\n  styleUrls: ['./doclist.component.css']\n})\nexport class DoclistComponent implements OnInit {\ndoctors:Doctor[];\n\nspecs:String[];\ns:String;\na:String;\nareas:String[];\narea:String;\nscore:Number;\n\n\n  constructor(private docListService:DoclistService) {\n  \n    this.specs=[\n      'Dentist',\n      'Psychiatrist',\n      'Cardiologist',\n      'Dermatologist'\n    ],\n    this.areas = [\n      'Los Angeles',\n      'San Diego',\n      'New York'\n    ]\n       }\n\n  ngOnInit() {\n   \n  }\n\n  searchLists(s:String,area:String,score:Number){\n\n    //console.log(this.score);\n    //console.log(this.s);\n    //console.log(this.a);\n\n\n    this.docListService.getDoctors().subscribe(docs =>{\n      this.doctors = docs;\n      this.filterResults();\n      })\n\n      \n  }\n\n  filterResults(){\n   // console.log(this.doctors);\n    if(this.s!=undefined){\n    this.doctors = this.doctors.filter(idx=>{\n      \n          return idx.speciality==this.s;\n    })\n  }\n  if(this.a!=undefined){\n    this.doctors = this.doctors.filter(idx=>{\n      \n          return idx.area==this.a;\n    })\n  }\n  if(this.score!=undefined){\n    this.doctors = this.doctors.filter(idx=>{\n     \n          return idx.score>=this.score;\n    })\n  }\n\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand navbar-dark bg-primary mb-2\\\">\\n\\n    <div class=\\\"container\\\">\\n      <a routerLink=\\\"/\\\" class=\\\"navbar-brand\\\">Angular App</a>\\n      <div>\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a routerLink=\\\"/\\\" class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\">Home</a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Doctor} from '../models/doctors';\nimport {Observable} from 'rxjs';\nimport {HttpClient,HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DoclistService {\n  Doctor:Doctor[];\n\n  postUrls = \"\";\n\n  constructor(private http:HttpClient) { \n   \n  }\n\n \n  getDoctors() : Observable<Doctor[]>{\n    return this.http.get<Doctor[]>(this.postUrls+'/home');\n  }\n  getDoctor(id:Number) : Observable<Doctor>{\n\n    return this.http.get<Doctor>(this.postUrls+\"/details/\"+id);\n  }\n\n  getSameDetails(category:String):Observable<Doctor[]>{\n    \n    return this.http.get<Doctor[]>(this.postUrls+'/'+category);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}